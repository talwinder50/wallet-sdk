// Objective-C API for talking to github.com/trustbloc/wallet-sdk/cmd/wallet-sdk-gomobile/credentialinquirer Go package.
//   gobind -lang=objc github.com/trustbloc/wallet-sdk/cmd/wallet-sdk-gomobile/credentialinquirer
//
// File is generated by gobind. Do not edit.

#ifndef __Credentialinquirer_H__
#define __Credentialinquirer_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Api.objc.h"
#include "Presentationexchange.objc.h"

@class CredentialinquirerCredentials;
@class CredentialinquirerInquirer;

/**
 * Credentials represents the different ways that credentials can be passed in to the Query method.
At most one out of VCs and CredentialReader should be used for a given call to Query. If both are specified,
then VCs will take precedence. If neither are specified, then the CredentialReader from the constructor (NewInquirer)
will be used instead.
 */
@interface CredentialinquirerCredentials : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * VCs is a JSON array of Verifiable Credentials. If specified, this takes precedence over the CredentialReader
used in the constructor (NewInquirer).
 */
@property (nonatomic) NSData* _Nullable vCs;
/**
 * CredentialReader allows for access to a VC storage mechanism. If specified, this takes precedence over the
CredentialReader used in the constructor (NewInquirer).
 */
@property (nonatomic) id<ApiCredentialReader> _Nullable credentialReader;
@end

/**
 * Inquirer can perform credential queries.
 */
@interface CredentialinquirerInquirer : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
// skipped constructor Inquirer.NewInquirer with unsupported parameter or return types

/**
 * Query returns credentials that match the given query.
Query is the filter to be applied to the credentials (TODO: define format).
See the Credentials struct for more information on how to use it with this method.
Credentials are returned as a JSON array.
 */
- (NSData* _Nullable)query:(NSString* _Nullable)query credentials:(CredentialinquirerCredentials* _Nullable)credentials error:(NSError* _Nullable* _Nullable)error;
@end

// skipped function NewInquirer with unsupported parameter or return types


#endif
